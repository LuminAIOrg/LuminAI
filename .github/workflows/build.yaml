name: LuminAi
run-name:  Build Project for ${{ github.repository_owner }} as actor ${{ github.actor }} ðŸš€
on:
  workflow_dispatch:
    
  push:
    branches:
     - "main"

env:
  GITHUB_USER: ${{ github.repository_owner }}
  IMAGE_NAME: "lumin-ai"

permissions:
  packages: write
  contents: read

jobs:
  backend: 
    runs-on: ubuntu-22.04
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: $${{ secrets.DB_PASS }}
      DB_NAME: $${{ secrets.DB_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: build backend
        run: |
          cd LuminAi
          set -e
          rm -rf target
          ./mvnw -B clean package
          mkdir -p ./target/deploy
          cp ./target/quarkus-app/quarkus-run.jar ./target/deploy/
  push:
    name: Build and push Docker image
    needs: backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tools repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            event=tag,type=semver,pattern={{version}}
            event=tag,type=semver,pattern={{major}}.{{minor}}
            event=tag,type=semver,pattern={{major}}
            type=sha

      - name: Docker Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./Luminai/src/main/docker/
          file: Dockerfile.jvw
          platforms: linux/amd64,linux/arm64/v8
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
