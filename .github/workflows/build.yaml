name: LuminAi
on:
  workflow_dispatch:
  push:
    branches:
      - "main"

env:
  GITHUB_USER: ${{ github.repository_owner }}
  IMAGE_NAME: "lumin-ai"

permissions:
  packages: write
  contents: read

jobs:
  backend:
    runs-on: ubuntu-22.04
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: $${{ secrets.DB_PASS }}
      DB_NAME: $${{ secrets.DB_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        
      - name: Build backend
        run: 
          cd LuminAi
          set -e
          rm -rf target
          ./mvnw -B clean package
          mkdir -p ./target/deploy
          cp ./target/quarkus-app/quarkus-run.jar ./target/deploy/
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx build --platform linux/arm64 --tag lumin-ai --file ./src/main/docker/Dockerfile.jvm . --build-arg "DB_USER=${{ secrets.DB_USER }}" --build-arg "DB_PASS=${{ secrets.DB_PASS }}" --build-arg "DB_NAME=${{ secrets.DB_NAME }}" --push

      - name: Push backend docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '' '[a-z]')
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  done:
    runs-on: ubuntu-22.04
    needs:
      - backend
    steps:
      - name: Done
        run: |
          echo "# Demo Docker images pushed" >> $GITHUB_STEP_SUMMARY
          echo "## Steps to do" >> $GITHUB_STEP_SUMMARY
          echo "- do not forget to make **$IMAGE_NAME** public" >> $GITHUB_STEP_SUMMARY
          echo "- refresh the deployments in your cloud" >> $GITHUB_STEP_SUMMARY

